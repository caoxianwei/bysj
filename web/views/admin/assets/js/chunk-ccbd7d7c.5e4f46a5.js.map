{"version":3,"sources":["webpack:///./src/components/page/Dashboard.vue?6421","webpack:///./src/assets/img/img.jpg","webpack:///./src/components/common/bus.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/schart.js/lib/sChart.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./src/components/page/Dashboard.vue?787d","webpack:///./node_modules/vue-schart/src/vue-schart.vue?535e","webpack:///node_modules/vue-schart/src/vue-schart.vue","webpack:///./node_modules/vue-schart/src/vue-schart.vue?bf02","webpack:///./node_modules/vue-schart/src/vue-schart.vue","webpack:///src/components/page/Dashboard.vue","webpack:///./src/components/page/Dashboard.vue?0714","webpack:///./src/components/page/Dashboard.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dashboard_vue_vue_type_style_index_0_id_077bc82e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dashboard_vue_vue_type_style_index_0_id_077bc82e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","module","exports","p","vue__WEBPACK_IMPORTED_MODULE_0__","bus","Vue","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","get","this","match","e","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","call","undefined","sChart","canvas","type","data","options","document","getElementById","ctx","getContext","dpi","window","devicePixelRatio","dataLength","length","showValue","autoWidth","width","height","topPadding","leftPadding","rightPadding","bottomPadding","yEqual","yLength","xLength","yFictitious","yRatio","bgColor","fillColor","axisColor","contentColor","titleColor","title","titlePosition","radius","innerRadius","colorList","legendColor","legendTop","totalValue","getTotalValue","init","dpiList","key","Array","isArray","concat","indexOf","parentNode","offsetWidth","offsetHeight","setAttribute","Math","floor","getYFictitious","drawBarUpdate","drawPieUpdate","fillStyle","fillRect","drawAxis","drawPoint","drawTitle","drawBarChart","drawLegend","drawPieChart","strokeStyle","i","left","top","value","right","bottom","beginPath","arc","PI","fill","moveTo","lineTo","stroke","font","fillText","x","y","x1","y1","start","end","closePath","middle","ceil","abs","cos","sin","textAlign","name","xlen","ylen","arr","slice","sort","a","b","len","pow","toString","total","$iterators","getKeys","redefine","global","hide","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","proto","render","_vm","_h","$createElement","_c","_self","attrs","gutter","span","staticClass","staticStyle","shadow","src","alt","_v","_s","userinfo","Username","UpdatedAt","body-style","padding","orderCount","userCount","amountFlow","ref","canvasId","options2","staticRenderFns","vue_schartvue_type_template_id_7ee3609f_render","id","vue_schartvue_type_template_id_7ee3609f_staticRenderFns","vue_schartvue_type_script_lang_js_","schart","opt","props","String","default","Object","required","mounted","renderChart","methods","sChart_default","watch","src_vue_schartvue_type_script_lang_js_","component","componentNormalizer","__file","vue_schart","Dashboardvue_type_script_lang_js_","localStorage","getItem","todoList","status","orderTrend","components","Schart","computed","role","created","parseUserinfo","JSON","parse","formatCreatedAt","handleListener","changeDate","getUserCount","getOrderCount","getAmountFlow","getOrderTrend","activated","deactivated","removeEventListener","$off","handleBus","row","column","cellValue","date","Date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","_this","request","post","then","res","code","console","log","_this2","_this3","_this4","d","Volume","now","getTime","forEach","item","index","$on","addEventListener","msg","_this5","setTimeout","$refs","line","page_Dashboardvue_type_script_lang_js_","Dashboard_component","__webpack_exports__"],"mappings":"kHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAufE,EAAG,wBCA1fE,EAAAC,QAAiBJ,EAAAK,EAAuB,0FCAxC,IAAAC,EAAAN,EAAA,QAGMO,EAAM,IAAIC,aAEDD,iCCLf,IAAAE,EAAST,EAAQ,QAAcU,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACAC,EAAA,OAGAA,KAAAJ,GAAkBX,EAAQ,SAAgBS,EAAAE,EAAAI,EAAA,CAC1CC,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAL,GAAA,GACK,MAAAM,GACL,qCCZA,IAAAC;;;;;;;;;;;CAKA,SAAAC,EAAAC,GAEQF,EAAA,WACR,OAAAE,EAAAD,IACSE,KAAApB,EAAAJ,EAAAI,EAAAD,QAAAsB,IAAAJ,IAAAlB,EAAAC,QAAAiB,IAJT,CAUCH,KAAA,SAAAI,GACD,aAQA,SAAAI,EAAAC,EAAAC,EAAAC,EAAAC,GACAZ,KAAAS,OAAAI,SAAAC,eAAAL,GACAT,KAAAe,IAAAf,KAAAS,OAAAO,WAAA,MACAhB,KAAAiB,IAAAC,OAAAC,kBAAA,EACAnB,KAAAU,OACAV,KAAAW,OACAX,KAAAoB,WAAApB,KAAAW,KAAAU,OACArB,KAAAsB,WAAA,EACAtB,KAAAuB,WAAA,EACAvB,KAAAwB,MAAAxB,KAAAS,OAAAe,MAAAxB,KAAAiB,IACAjB,KAAAyB,OAAAzB,KAAAS,OAAAgB,OAAAzB,KAAAiB,IACAjB,KAAA0B,WAAA,GAAA1B,KAAAiB,IACAjB,KAAA2B,YAAA,GAAA3B,KAAAiB,IACAjB,KAAA4B,aAAA,EAAA5B,KAAAiB,IACAjB,KAAA6B,cAAA,GAAA7B,KAAAiB,IACAjB,KAAA8B,OAAA,EACA9B,KAAA+B,QAAA,EACA/B,KAAAgC,QAAA,EACAhC,KAAAiC,YAAA,EACAjC,KAAAkC,OAAA,EACAlC,KAAAmC,QAAA,UACAnC,KAAAoC,UAAA,UACApC,KAAAqC,UAAA,UACArC,KAAAsC,aAAA,UACAtC,KAAAuC,WAAA,UACAvC,KAAAwC,MAAA,GACAxC,KAAAyC,cAAA,MACAzC,KAAA0C,OAAA,IAAA1C,KAAAiB,IACAjB,KAAA2C,YAAA,GAAA3C,KAAAiB,IACAjB,KAAA4C,UAAA,kFACA5C,KAAA6C,YAAA,UACA7C,KAAA8C,UAAA,GAAA9C,KAAAiB,IACAjB,KAAA+C,WAAA/C,KAAAgD,gBACAhD,KAAAiD,KAAArC,GA4RA,OA1RAJ,EAAAb,UAAA,CACAsD,KAAA,SAAArC,GACA,OAAAZ,KAAAoB,WACA,SAEA,GAAAR,EAAA,CACA,IAAAsC,EAAA,+FACA,QAAAC,KAAAvC,EACA,cAAAuC,GAAAC,MAAAC,QAAAzC,EAAAuC,IACAnD,KAAAmD,GAAAvC,EAAAuC,GAAAG,OAAAtD,KAAAmD,IACqBD,EAAAK,QAAAJ,IAAA,EACrBnD,KAAAmD,GAAAvC,EAAAuC,GAAAnD,KAAAiB,IAEAjB,KAAAmD,GAAAvC,EAAAuC,GAMAvC,EAAAW,WACAvB,KAAAwB,MAAAxB,KAAAS,OAAAe,MAAAxB,KAAAS,OAAA+C,WAAAC,YAAAzD,KAAAiB,IACAjB,KAAAyB,OAAAzB,KAAAS,OAAAgB,OAAAzB,KAAAS,OAAA+C,WAAAE,aAAA1D,KAAAiB,IACAjB,KAAAS,OAAAkD,aAAA,iBAAA3D,KAAAS,OAAA+C,WAAAC,YAAA,aAAsGzD,KAAAS,OAAA+C,WAAAE,aAAA,SAEtG1D,KAAAS,OAAAkD,aAAA,iBAAA3D,KAAAS,OAAAe,MAAA,aAAqFxB,KAAAS,OAAAgB,OAAA,OACrFzB,KAAAS,OAAAe,OAAAxB,KAAAiB,IACAjB,KAAAS,OAAAgB,QAAAzB,KAAAiB,KAGA,QAAAjB,KAAAU,MAAA,SAAAV,KAAAU,MACAV,KAAA+B,QAAA6B,KAAAC,OAAA7D,KAAAyB,OAAAzB,KAAA0B,WAAA1B,KAAA6B,cAAA,IAAA7B,KAAA8B,QACA9B,KAAAgC,QAAA4B,KAAAC,OAAA7D,KAAAwB,MAAAxB,KAAA2B,YAAA3B,KAAA4B,aAAA,IAAA5B,KAAAoB,YACApB,KAAAiC,YAAAjC,KAAA8D,eAAA9D,KAAAW,MACAX,KAAAkC,OAAAlC,KAAA+B,QAAA/B,KAAAiC,YACAjC,KAAA+D,iBAEA/D,KAAAgE,iBAMAD,cAAA,WACA/D,KAAAe,IAAAkD,UAAAjE,KAAAmC,QACAnC,KAAAe,IAAAmD,SAAA,IAAAlE,KAAAwB,MAAAxB,KAAAyB,QACAzB,KAAAmE,WACAnE,KAAAoE,YACApE,KAAAqE,YACArE,KAAAsE,gBAKAN,cAAA,WACAhE,KAAAe,IAAAkD,UAAAjE,KAAAmC,QACAnC,KAAAe,IAAAmD,SAAA,IAAAlE,KAAAwB,MAAAxB,KAAAyB,QACAzB,KAAAuE,aACAvE,KAAAqE,YACArE,KAAAwE,gBAKAF,aAAA,WACAtE,KAAAe,IAAAkD,UAAAjE,KAAAoC,UACApC,KAAAe,IAAA0D,YAAAzE,KAAAoC,UACA,QAAAsC,EAAA,EAA2BA,EAAA1E,KAAAoB,WAAqBsD,IAChD1E,KAAAW,KAAA+D,GAAAC,KAAA3E,KAAA2B,YAAA3B,KAAAgC,SAAA0C,EAAA,KACA1E,KAAAW,KAAA+D,GAAAE,IAAA5E,KAAAyB,OAAAzB,KAAA6B,cAAA7B,KAAAW,KAAA+D,GAAAG,MAAA7E,KAAAkC,OACAlC,KAAAW,KAAA+D,GAAAI,MAAA9E,KAAA2B,YAAA3B,KAAAgC,SAAA0C,EAAA,KACA1E,KAAAW,KAAA+D,GAAAK,OAAA/E,KAAAyB,OAAAzB,KAAA6B,cAGA,SAAA7B,KAAAU,MACAV,KAAAe,IAAAiE,YACAhF,KAAAe,IAAAkE,IAAAjF,KAAAW,KAAA+D,GAAAC,KAAA3E,KAAAgC,QAAA,EAAAhC,KAAAW,KAAA+D,GAAAE,IAAA,MAAAhB,KAAAsB,IAAA,GACAlF,KAAAe,IAAAoE,OACA,IAAAT,IACA1E,KAAAe,IAAAqE,OAAApF,KAAAW,KAAA+D,GAAAC,KAAA3E,KAAAgC,QAAA,EAAAhC,KAAAW,KAAA+D,GAAAE,KACA5E,KAAAe,IAAAsE,OAAArF,KAAAW,KAAA+D,EAAA,GAAAC,KAAA3E,KAAAgC,QAAA,EAAAhC,KAAAW,KAAA+D,EAAA,GAAAE,MAEA5E,KAAAe,IAAAuE,UACiB,QAAAtF,KAAAU,MAEjBV,KAAAe,IAAAmD,SACAlE,KAAAW,KAAA+D,GAAAC,KACA3E,KAAAW,KAAA+D,GAAAE,IACA5E,KAAAW,KAAA+D,GAAAI,MAAA9E,KAAAW,KAAA+D,GAAAC,KACA3E,KAAAW,KAAA+D,GAAAK,OAAA/E,KAAAW,KAAA+D,GAAAE,KAGA5E,KAAAsB,YACAtB,KAAAe,IAAAwE,KAAA,GAAAvF,KAAAiB,IAAA,WACAjB,KAAAe,IAAAyE,SACAxF,KAAAW,KAAA+D,GAAAG,MACA7E,KAAAW,KAAA+D,GAAAC,KAAA3E,KAAAgC,QAAA,EACAhC,KAAAW,KAAA+D,GAAAE,IAAA,KAQAJ,aAAA,WAKA,IAJA,IAAAiB,EAAAzF,KAAAwB,MAAA,EACAkE,EAAA1F,KAAAyB,OAAA,EACAkE,EAAA,EACAC,EAAA,EACAlB,EAAA,EAA2BA,EAAA1E,KAAAoB,WAAqBsD,IAChD1E,KAAAe,IAAAiE,YACAhF,KAAAe,IAAAkD,UAAAjE,KAAA4C,UAAA8B,GACA1E,KAAAe,IAAAqE,OAAAK,EAAAC,GACA1F,KAAAW,KAAA+D,GAAAmB,MAAA,IAAAnB,GAAAd,KAAAsB,GAAA,EAAAlF,KAAAW,KAAA+D,EAAA,GAAAoB,IACA9F,KAAAW,KAAA+D,GAAAoB,IAAA9F,KAAAW,KAAA+D,GAAAmB,MAAA7F,KAAAW,KAAA+D,GAAAG,MAAA7E,KAAA+C,WAAA,EAAAa,KAAAsB,GAEAlF,KAAAe,IAAAkE,IAAAQ,EAAAC,EAAA1F,KAAA0C,OAAA1C,KAAAW,KAAA+D,GAAAmB,MAAA7F,KAAAW,KAAA+D,GAAAoB,KACA9F,KAAAe,IAAAgF,YACA/F,KAAAe,IAAAoE,OAEAnF,KAAAW,KAAA+D,GAAAsB,QAAAhG,KAAAW,KAAA+D,GAAAmB,MAAA7F,KAAAW,KAAA+D,GAAAoB,KAAA,EACAH,EAAA/B,KAAAqC,KAAArC,KAAAsC,IAAAlG,KAAA0C,OAAAkB,KAAAuC,IAAAnG,KAAAW,KAAA+D,GAAAsB,UACAJ,EAAAhC,KAAAC,MAAAD,KAAAsC,IAAAlG,KAAA0C,OAAAkB,KAAAwC,IAAApG,KAAAW,KAAA+D,GAAAsB,UAEAhG,KAAAe,IAAA0D,YAAAzE,KAAA4C,UAAA8B,GAEA1E,KAAAsB,YACAtB,KAAAW,KAAA+D,GAAAsB,QAAA,GACAhG,KAAAe,IAAAsF,UAAA,OACArG,KAAAe,IAAAqE,OAAAK,EAAAE,EAAAD,EAAAE,GACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAqE,OAAAK,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,IACA5F,KAAAe,IAAAuE,SACAtF,KAAAe,IAAAyE,SAAAxF,KAAAW,KAAA+D,GAAAG,MAAAY,EAAAE,EAAA,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,IACqB5F,KAAAW,KAAA+D,GAAAsB,OAAA,GAAAhG,KAAAW,KAAA+D,GAAAsB,QAAApC,KAAAsB,GAAA,GACrBlF,KAAAe,IAAAsF,UAAA,OACArG,KAAAe,IAAAqE,OAAAK,EAAAE,EAAAD,EAAAE,GACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAqE,OAAAK,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,IACA5F,KAAAe,IAAAuE,SACAtF,KAAAe,IAAAyE,SAAAxF,KAAAW,KAAA+D,GAAAG,MAAAY,EAAAE,EAAA,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,KACqB5F,KAAAW,KAAA+D,GAAAsB,OAAApC,KAAAsB,GAAA,GAAAlF,KAAAW,KAAA+D,GAAAsB,OAAApC,KAAAsB,IACrBlF,KAAAe,IAAAsF,UAAA,QACArG,KAAAe,IAAAqE,OAAAK,EAAAE,EAAAD,EAAAE,GACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAqE,OAAAK,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,IACA5F,KAAAe,IAAAuE,SACAtF,KAAAe,IAAAyE,SAAAxF,KAAAW,KAAA+D,GAAAG,MAAAY,EAAAE,EAAA,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,MAEA5F,KAAAe,IAAAsF,UAAA,QACArG,KAAAe,IAAAqE,OAAAK,EAAAE,EAAAD,EAAAE,GACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAqE,OAAAK,EAAAE,EAAA,GAAAD,EAAAE,EAAA,IACA5F,KAAAe,IAAAsE,OAAAI,EAAAE,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,IACA5F,KAAAe,IAAAuE,SACAtF,KAAAe,IAAAyE,SAAAxF,KAAAW,KAAA+D,GAAAG,MAAAY,EAAAE,EAAA,EAAA3F,KAAA0C,OAAA,EAAAgD,EAAAE,EAAA,KAKA,SAAA5F,KAAAU,OACAV,KAAAe,IAAAiE,YACAhF,KAAAe,IAAAkD,UAAAjE,KAAAmC,QACAnC,KAAAe,IAAAkE,IAAAQ,EAAAC,EAAA1F,KAAA2C,YAAA,IAAAiB,KAAAsB,IACAlF,KAAAe,IAAAoE,SAMAhB,SAAA,WACAnE,KAAAe,IAAAiE,YACAhF,KAAAe,IAAA0D,YAAAzE,KAAAqC,UAEArC,KAAAe,IAAAqE,OAAApF,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA,IACA7B,KAAAe,IAAAsE,OAAArF,KAAA2B,YAAA,GAAA3B,KAAA0B,WAAA,IAEA1B,KAAAe,IAAAqE,OAAApF,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA,IACA7B,KAAAe,IAAAsE,OAAArF,KAAAwB,MAAAxB,KAAA4B,aAAA,GAAA5B,KAAAyB,OAAAzB,KAAA6B,cAAA,IACA7B,KAAAe,IAAAuE,UAKAlB,UAAA,WAEApE,KAAAe,IAAAiE,YACAhF,KAAAe,IAAAwE,KAAA,GAAAvF,KAAAiB,IAAA,qBACAjB,KAAAe,IAAAsF,UAAA,SACArG,KAAAe,IAAAkD,UAAAjE,KAAAqC,UACA,QAAAqC,EAAA,EAA2BA,EAAA1E,KAAAoB,WAAqBsD,IAAA,CAChD,IAAA4B,EAAAtG,KAAAW,KAAA+D,GAAA4B,KACAC,EAAAvG,KAAAgC,SAAA0C,EAAA,GACA1E,KAAAe,IAAAqE,OAAApF,KAAA2B,YAAA4E,EAAA,GAAAvG,KAAAyB,OAAAzB,KAAA6B,cAAA,IACA7B,KAAAe,IAAAsE,OAAArF,KAAA2B,YAAA4E,EAAA,GAAAvG,KAAAyB,OAAAzB,KAAA6B,cAAA,KACA7B,KAAAe,IAAAyE,SAAAc,EAAAtG,KAAA2B,YAAA4E,EAAAvG,KAAAgC,QAAA,EAAAhC,KAAAyB,OAAAzB,KAAA6B,cAAA,GAAA7B,KAAAiB,KAEAjB,KAAAe,IAAAuE,SAGAtF,KAAAe,IAAAiE,YACAhF,KAAAe,IAAAwE,KAAA,GAAAvF,KAAAiB,IAAA,qBACAjB,KAAAe,IAAAsF,UAAA,QACArG,KAAAe,IAAAkD,UAAAjE,KAAAqC,UACArC,KAAAe,IAAAqE,OAAApF,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA,IACA7B,KAAAe,IAAAsE,OAAArF,KAAA2B,YAAA,IAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA,IACA7B,KAAAe,IAAAyE,SAAA,EAAAxF,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA,GACA,IAAA6C,EAAA,EAA2BA,EAAA1E,KAAA8B,OAAiB4C,IAAA,CAC5C,IAAAgB,EAAA1F,KAAAiC,aAAAyC,EAAA,GACA8B,EAAAxG,KAAA+B,SAAA2C,EAAA,GACA1E,KAAAe,IAAAiE,YACAhF,KAAAe,IAAA0D,YAAAzE,KAAAqC,UACArC,KAAAe,IAAAqE,OAAApF,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA2E,EAAA,IACAxG,KAAAe,IAAAsE,OAAArF,KAAA2B,YAAA,IAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA2E,EAAA,IACAxG,KAAAe,IAAAuE,SACAtF,KAAAe,IAAAyE,SAAAE,EAAA1F,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA2E,EAAA,GACAxG,KAAAe,IAAAiE,YACAhF,KAAAe,IAAA0D,YAAAzE,KAAAsC,aACAtC,KAAAe,IAAAqE,OAAApF,KAAA2B,YAAA,GAAA3B,KAAAyB,OAAAzB,KAAA6B,cAAA2E,EAAA,IACAxG,KAAAe,IAAAsE,OAAArF,KAAAwB,MAAAxB,KAAA4B,aAAA,GAAA5B,KAAAyB,OAAAzB,KAAA6B,cAAA2E,EAAA,IACAxG,KAAAe,IAAAuE,WAMAjB,UAAA,WACArE,KAAAwC,QACAxC,KAAAe,IAAAiE,YACAhF,KAAAe,IAAAsF,UAAA,SACArG,KAAAe,IAAAkD,UAAAjE,KAAAuC,WACAvC,KAAAe,IAAAwE,KAAA,GAAAvF,KAAAiB,IAAA,qBACA,WAAAjB,KAAAyC,eAAAzC,KAAA6B,eAAA,GACA7B,KAAAe,IAAAyE,SAAAxF,KAAAwC,MAAAxC,KAAAwB,MAAA,EAAAxB,KAAAyB,OAAA,GAEAzB,KAAAe,IAAAyE,SAAAxF,KAAAwC,MAAAxC,KAAAwB,MAAA,EAAAxB,KAAA0B,WAAA,OAOA6C,WAAA,WACA,QAAAG,EAAA,EAA2BA,EAAA1E,KAAAoB,WAAqBsD,IAChD1E,KAAAe,IAAAkD,UAAAjE,KAAA4C,UAAA8B,GACA1E,KAAAe,IAAAmD,SAAA,GAAAlE,KAAA8C,UAAA,GAAA4B,EAAA1E,KAAAiB,IAAA,OACAjB,KAAAe,IAAAkD,UAAAjE,KAAA6C,YACA7C,KAAAe,IAAAwE,KAAA,GAAAvF,KAAAiB,IAAA,qBACAjB,KAAAe,IAAAsF,UAAA,OACArG,KAAAe,IAAAyE,SAAAxF,KAAAW,KAAA+D,GAAA4B,KAAA,GAAAtG,KAAA8C,UAAA,MAAA4B,EAAA1E,KAAAiB,MAQA6C,eAAA,SAAAnD,GACA,IAAA8F,EAAA9F,EAAA+F,MAAA,GACAD,EAAAE,KAAA,SAAAC,EAAAC,GACA,QAAAD,EAAA/B,MAAAgC,EAAAhC,SAEA,IAAAiC,EAAAlD,KAAAqC,KAAAQ,EAAA,GAAA5B,MAAA7E,KAAA8B,QACAiF,EAAAD,EAAAE,WAAA3F,OAAA,EAEA,OADA0F,IAAA,IAAAA,EACAnD,KAAAqC,KAAAa,EAAAlD,KAAAmD,IAAA,GAAAA,IAAAnD,KAAAmD,IAAA,GAAAA,IAMA/D,cAAA,WAEA,IADA,IAAAiE,EAAA,EACAvC,EAAA,EAA2BA,EAAA1E,KAAAoB,WAAqBsD,IAChDuC,GAAAjH,KAAAW,KAAA+D,GAAAG,MAEA,OAAAoC,IAGAzG,0BCxSA,IA7CA,IAAA0G,EAAiBpI,EAAQ,QACzBqI,EAAcrI,EAAQ,QACtBsI,EAAetI,EAAQ,QACvBuI,EAAavI,EAAQ,QACrBwI,EAAWxI,EAAQ,QACnByI,EAAgBzI,EAAQ,QACxB0I,EAAU1I,EAAQ,QAClB2I,EAAAD,EAAA,YACAE,EAAAF,EAAA,eACAG,EAAAJ,EAAAnE,MAEAwE,EAAA,CACAC,aAAA,EACAC,qBAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,eAAA,EACAC,cAAA,EACAC,sBAAA,EACAC,UAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,WAAA,EACAC,eAAA,EACAC,cAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,QAAA,EACAC,aAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,GAGAC,EAAAzC,EAAAS,GAAAlD,EAAA,EAAoDA,EAAAkF,EAAAvI,OAAwBqD,IAAA,CAC5E,IAIAvB,EAJAtD,EAAA+J,EAAAlF,GACAmF,EAAAjC,EAAA/H,GACAiK,EAAAzC,EAAAxH,GACAkK,EAAAD,KAAAnK,UAEA,GAAAoK,IACAA,EAAAtC,IAAAH,EAAAyC,EAAAtC,EAAAE,GACAoC,EAAArC,IAAAJ,EAAAyC,EAAArC,EAAA7H,GACA0H,EAAA1H,GAAA8H,EACAkC,GAAA,IAAA1G,KAAA+D,EAAA6C,EAAA5G,IAAAiE,EAAA2C,EAAA5G,EAAA+D,EAAA/D,IAAA,8CCvDA,IAAA6G,EAAA,WAA0B,IAAAC,EAAAjK,KAAakK,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,UAA8BE,MAAA,CAAOC,OAAA,KAAa,CAAAH,EAAA,UAAeE,MAAA,CAAOE,KAAA,IAAU,CAAAJ,EAAA,WAAgBK,YAAA,QAAAC,YAAA,CAAiCjJ,OAAA,QAAgB6I,MAAA,CAAQK,OAAA,UAAkB,CAAAP,EAAA,OAAYK,YAAA,aAAwB,CAAAL,EAAA,OAAYK,YAAA,cAAAH,MAAA,CAAiCM,IAAM9L,EAAQ,QAA0B+L,IAAA,MAAYT,EAAA,OAAYK,YAAA,kBAA6B,CAAAL,EAAA,OAAYK,YAAA,kBAA6B,CAAAR,EAAAa,GAAAb,EAAAc,GAAAd,EAAAe,SAAAC,iBAAAb,EAAA,OAAwDK,YAAA,kBAA6B,CAAAR,EAAAa,GAAA,WAAAV,EAAA,QAAAH,EAAAa,GAAAb,EAAAc,GAAAd,EAAAe,SAAAE,mBAAA,GAAAd,EAAA,UAA6FE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,UAAeE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,WAAgBE,MAAA,CAAOK,OAAA,QAAAQ,aAAA,CAA+BC,QAAA,SAAiB,CAAAhB,EAAA,OAAYK,YAAA,2BAAsC,CAAAL,EAAA,KAAUK,YAAA,kCAA4CL,EAAA,OAAYK,YAAA,mBAA8B,CAAAL,EAAA,OAAYK,YAAA,YAAuB,CAAAR,EAAAa,GAAAb,EAAAc,GAAAd,EAAAoB,eAAAjB,EAAA,OAAAH,EAAAa,GAAA,qBAAAV,EAAA,UAAsFK,YAAA,QAAAH,MAAA,CAA2BC,OAAA,KAAa,CAAAH,EAAA,UAAeE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,WAAgBE,MAAA,CAAOK,OAAA,QAAAQ,aAAA,CAA+BC,QAAA,SAAiB,CAAAhB,EAAA,OAAYK,YAAA,2BAAsC,CAAAL,EAAA,KAAUK,YAAA,oCAA8CL,EAAA,OAAYK,YAAA,mBAA8B,CAAAL,EAAA,OAAYK,YAAA,YAAuB,CAAAR,EAAAa,GAAAb,EAAAc,GAAAd,EAAAqB,cAAAlB,EAAA,OAAAH,EAAAa,GAAA,qBAAAV,EAAA,UAAqFE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,WAAgBE,MAAA,CAAOK,OAAA,QAAAQ,aAAA,CAA+BC,QAAA,SAAiB,CAAAhB,EAAA,OAAYK,YAAA,2BAAsC,CAAAL,EAAA,KAAUK,YAAA,mCAA6CL,EAAA,OAAYK,YAAA,mBAA8B,CAAAL,EAAA,OAAYK,YAAA,YAAuB,CAAAR,EAAAa,GAAAb,EAAAc,GAAAd,EAAAsB,WAAA,QAAAnB,EAAA,OAAAH,EAAAa,GAAA,gCAAAV,EAAA,UAAuGE,MAAA,CAAOC,OAAA,KAAa,CAAAH,EAAA,UAAeE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,WAAgBE,MAAA,CAAOK,OAAA,UAAkB,CAAAP,EAAA,UAAeoB,IAAA,OAAAf,YAAA,SAAAH,MAAA,CAAuCmB,SAAA,OAAA9K,KAAAsJ,EAAAtJ,KAAAD,KAAA,OAAAE,QAAAqJ,EAAAyB,aAAwE,gBAClgEC,EAAA,GCDIC,uBAAM,WAAgB,IAAA3B,EAAAjK,KAAakK,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,UAA8BE,MAAA,CAAOuB,GAAA5B,EAAAwB,gBAC1HK,EAAe,wBCOnBC,EAAA,CACApL,KADA,WAEA,OACAqL,OAAA,KACAC,IAAA,KAGAC,MAAA,CACAT,SAAA,CACA/K,KAAAyL,OACAC,QAAA,IAEA1L,KAAA,CACAA,KAAAyL,OACAC,QAAA,OAEAzL,KAAA,CACAD,KAAA0C,MACAgJ,QAAA,IAEAxL,QAAA,CACAF,KAAA2L,OACAC,UAAA,IAGAC,QAzBA,WA0BAvM,KAAAwM,eAEAC,QAAA,CACAD,YADA,WAEAxM,KAAAgM,OAAA,KACAhM,KAAAiM,IAAAjM,KAAAY,QACAZ,KAAAwB,OAAAxB,KAAAyB,SACAzB,KAAAiM,IAGAjM,KAAAiM,IAAA,gBAFAjM,KAAAiM,IAAA,CAAA1K,WAAA,IAKAvB,KAAAgM,OAAA,IAAAU,EAAA9F,EAAA5G,KAAAyL,SAAAzL,KAAAU,KAAAV,KAAAW,KAAAX,KAAAiM,OAGAU,MAAA,CACAhM,KADA,WAEAX,KAAAwM,eAEA5L,QAJA,WAKAZ,KAAAwM,eAEA9L,KAPA,WAQAV,KAAAwM,iBC1DmRI,EAAA,cCOnRC,EAAgBR,OAAAS,EAAA,KAAAT,CACdO,EACAhB,EACAE,GACF,EACA,KACA,KACA,MAIAe,EAAAjM,QAAAmM,OAAA,iBACe,IAAAC,EAAAH,kCCsDfI,EAAA,CACA3G,KAAA,YACA3F,KAFA,WAGA,OACA2F,KAAA4G,aAAAC,QAAA,eACAC,SAAA,EACA5K,MAAA,eACA6K,QAAA,GAEA,CACA7K,MAAA,eACA6K,QAAA,GAEA,CACA7K,MAAA,oBACA6K,QAAA,GACA,CACA7K,MAAA,eACA6K,QAAA,GAEA,CACA7K,MAAA,eACA6K,QAAA,GAEA,CACA7K,MAAA,oBACA6K,QAAA,IAGA1M,KAAA,GAEA+K,SAAA,CACAlJ,MAAA,YACAJ,UAAA,UACAC,UAAA,UACAC,aAAA,UACAH,QAAA,UACAN,cAAA,GACAH,WAAA,IAEA2J,WAAA,EACAC,UAAA,EACAC,WAAA,EACA+B,WAAA,GACAtC,SAAA,KAIAuC,WAAA,CACAC,OAAAR,GAEAS,SAAA,CACAC,KADA,WAEA,gBAAA1N,KAAAsG,KAAA,iBAGAqH,QAxDA,WAyDA,IAAAC,EAAAC,KAAAC,MAAAZ,aAAAC,QAAA,aACAS,EAAA1C,UAAAlL,KAAA+N,gBAAA,MAAAH,EAAA1C,WACAlL,KAAAgL,SAAA4C,EAEA5N,KAAAgO,iBACAhO,KAAAiO,aACAjO,KAAAkO,eACAlO,KAAAmO,gBACAnO,KAAAoO,gBACApO,KAAAqO,iBAEAC,UApEA,WAqEAtO,KAAAgO,kBAEAO,YAvEA,WAwEArN,OAAAsN,oBAAA,SAAAxO,KAAAwM,aACAnN,EAAA,KAAAoP,KAAA,WAAAzO,KAAA0O,YAEAjC,QAAA,CACAsB,gBADA,SACAY,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,UAAAjB,MAAAe,IACAG,EAAAF,EAAAG,cAAA,IACAC,GAAAJ,EAAAK,WAAA,UAAAL,EAAAK,WAAA,GAAAL,EAAAK,WAAA,OACAC,EAAAN,EAAAO,UAAA,IACAC,EAAAR,EAAAS,WAAA,IACAC,EAAAV,EAAAW,aAAA,IACAC,EAAAZ,EAAAa,aACA,OAAAX,EAAAE,EAAAE,EAAAE,EAAAE,EAAAE,GAEAxB,aAXA,WAWA,IAAA0B,EAAA5P,KACA6P,EAAA,KAAAC,KAAA,mCAAAC,KAAA,SAAAC,GACA,MAAAA,EAAAC,OACAC,QAAAC,IAAAH,EAAArP,MACAiP,EAAAtE,UAAA0E,EAAArP,SAKAwN,cApBA,WAoBA,IAAAiC,EAAApQ,KACA6P,EAAA,KAAAC,KAAA,oCAAAC,KAAA,SAAAC,GACA,MAAAA,EAAAC,OACAC,QAAAC,IAAAH,EAAArP,MACAyP,EAAA/E,WAAA2E,EAAArP,SAKAyN,cA7BA,WA6BA,IAAAiC,EAAArQ,KACA6P,EAAA,KAAAC,KAAA,oCAAAC,KAAA,SAAAC,GACA,MAAAA,EAAAC,OACAC,QAAAC,IAAAH,EAAArP,MACA0P,EAAA9E,WAAAyE,EAAArP,SAIA0N,cArCA,WAqCA,IAAAiC,EAAAtQ,KACA6P,EAAA,KAAAC,KAAA,oCAAAC,KAAA,SAAAC,GACA,SAAAA,EAAAC,KAAA,CACAC,QAAAC,IAAAH,GACAM,EAAAhD,WAAA0C,EAAArP,KACA,QAAA+D,EAAA,EAAAA,EAAA4L,EAAAhD,WAAAjM,OAAAqD,IAAA,CACA,IAAA6L,EAAA,CACAjK,KAAAgK,EAAAhD,WAAA5I,GAAAqK,KACAlK,MAAAyL,EAAAhD,WAAA5I,GAAA8L,QAEAF,EAAA3P,KAAA2P,EAAA3P,KAAA2C,OAAAiN,GAEAL,QAAAC,IAAAG,EAAA3P,UAMAsN,WAvDA,WAwDA,IAAAwC,GAAA,IAAA1B,MAAA2B,UACA1Q,KAAAW,KAAAgQ,QAAA,SAAAC,EAAAC,GACA,IAAA/B,EAAA,IAAAC,KAAA0B,EAAA,SAAAI,IACAD,EAAAtK,KAAA,GAAAhD,OAAAwL,EAAAG,cAAA,KAAA3L,OAAAwL,EAAAK,WAAA,OAAA7L,OAAAwL,EAAAO,cAGArB,eA9DA,WA+DA3O,EAAA,KAAAyR,IAAA,WAAA9Q,KAAA0O,WAEAxN,OAAA6P,iBAAA,SAAA/Q,KAAAwM,cAEAkC,UAnEA,SAmEAsC,GAAA,IAAAC,EAAAjR,KACAkR,WAAA,WACAD,EAAAzE,eACA,MAEAA,YAxEA,WAyEAxM,KAAAmR,MAAAC,KAAA5E,iBC7NkW6E,EAAA,ECQ9VC,aAAYjF,OAAAS,EAAA,KAAAT,CACdgF,EACArH,EACA2B,GACF,EACA,KACA,WACA,OAIA2F,EAAS1Q,QAAAmM,OAAA,gBACMwE,EAAA,WAAAD","file":"assets/js/chunk-ccbd7d7c.5e4f46a5.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&id=077bc82e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&id=077bc82e&scoped=true&lang=css&\"","module.exports = __webpack_public_path__ + \"assets/img/img.146655c9.jpg\";","import Vue from 'vue';\r\n\r\n// 使用 Event Bus\r\nconst bus = new Vue();\r\n\r\nexport default bus;","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/*!\r\n * sChart JavaScript Library v2.0.1\r\n * http://blog.gdfengshuo.com/example/sChart/ | Released under the MIT license\r\n * Date: 2018-04-16T18:59Z\r\n */\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory;\r\n    } else {\r\n        root.sChart = factory(root);\r\n    }\r\n})(this, function (root) {\r\n    'use strict';\r\n    /**\r\n     * 生成图表\r\n     * @param {String} canvas 画布元素id\r\n     * @param {String} type 图表类型\r\n     * @param {Array} data 生成图表的数据\r\n     * @param {Object} options 图表参数 可选参数\r\n     */\r\n    function sChart(canvas, type, data, options) {\r\n        this.canvas = document.getElementById(canvas);\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.dpi = window.devicePixelRatio || 1;\r\n        this.type = type;\r\n        this.data = data; // 存放图表数据\r\n        this.dataLength = this.data.length; // 图表数据的长度\r\n        this.showValue = true; // 是否在图表中显示数值\r\n        this.autoWidth = false; // 宽高是否自适应\r\n        this.width = this.canvas.width * this.dpi; // canvas 宽度\r\n        this.height = this.canvas.height * this.dpi; // canvas 高度\r\n        this.topPadding = 50 * this.dpi;\r\n        this.leftPadding = 50 * this.dpi;\r\n        this.rightPadding = 0 * this.dpi;\r\n        this.bottomPadding = 50 * this.dpi;\r\n        this.yEqual = 5; // y轴分成5等分\r\n        this.yLength = 0; // y轴坐标点之间的真实长度\r\n        this.xLength = 0; // x轴坐标点之间的真实长度\r\n        this.yFictitious = 0; // y轴坐标点之间显示的间距\r\n        this.yRatio = 0; // y轴坐标真实长度和坐标间距的比\r\n        this.bgColor = '#ffffff'; // 默认背景颜色\r\n        this.fillColor = '#1E9FFF'; // 默认填充颜色\r\n        this.axisColor = '#666666'; // 坐标轴颜色\r\n        this.contentColor = '#eeeeee'; // 内容横线颜色\r\n        this.titleColor = '#000000'; // 图表标题颜色\r\n        this.title = ''; // 图表标题\r\n        this.titlePosition = 'top'; // 图表标题位置: top / bottom\r\n        this.radius = 100 * this.dpi; // 饼图半径和环形图外圆半径\r\n        this.innerRadius = 70 * this.dpi; // 环形图内圆半径\r\n        this.colorList = ['#1E9FFF', '#13CE66', '#F7BA2A', '#FF4949', '#72f6ff', '#199475', '#e08031', '#726dd1']; // 饼图颜色列表\r\n        this.legendColor = '#000000'; // 图例文字颜色\r\n        this.legendTop = 40 * this.dpi; // 图例距离顶部高度\r\n        this.totalValue = this.getTotalValue(); // 获取饼图数据总和\r\n        this.init(options);\r\n    }\r\n    sChart.prototype = {\r\n        init: function (options) {\r\n            if (this.dataLength === 0) {\r\n                return false;\r\n            }\r\n            if (options) {\r\n                var dpiList = ['topPadding', 'leftPadding', 'rightPadding', 'bottomPadding', 'radius', 'innerRadius', 'legendTop'];\r\n                for (var key in options) {\r\n                    if (key === 'colorList' && Array.isArray(options[key])) {\r\n                        this[key] = options[key].concat(this[key])\r\n                    } else if (dpiList.indexOf(key) > -1) {\r\n                        this[key] = options[key] * this.dpi;\r\n                    } else {\r\n                        this[key] = options[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 如果设置了自动宽高的话，则就宽高设为父元素的宽高\r\n            if (options.autoWidth) {\r\n                this.width = this.canvas.width = this.canvas.parentNode.offsetWidth * this.dpi;\r\n                this.height = this.canvas.height = this.canvas.parentNode.offsetHeight * this.dpi;\r\n                this.canvas.setAttribute('style', 'width:' + this.canvas.parentNode.offsetWidth + 'px;height:' + this.canvas.parentNode.offsetHeight + 'px;')\r\n            } else {\r\n                this.canvas.setAttribute('style', 'width:' + this.canvas.width + 'px;height:' + this.canvas.height + 'px;');\r\n                this.canvas.width *= this.dpi;\r\n                this.canvas.height *= this.dpi;\r\n            }\r\n\r\n            if (this.type === 'bar' || this.type === 'line') {\r\n                this.yLength = Math.floor((this.height - this.topPadding - this.bottomPadding - 10) / this.yEqual);\r\n                this.xLength = Math.floor((this.width - this.leftPadding - this.rightPadding - 10) / this.dataLength);\r\n                this.yFictitious = this.getYFictitious(this.data);\r\n                this.yRatio = this.yLength / this.yFictitious;\r\n                this.drawBarUpdate();\r\n            } else {\r\n                this.drawPieUpdate();\r\n            }\r\n        },\r\n        /**\r\n         * 绘制完整的柱状图或折线图\r\n         */\r\n        drawBarUpdate: function () {\r\n            this.ctx.fillStyle = this.bgColor;\r\n            this.ctx.fillRect(0, 0, this.width, this.height);\r\n            this.drawAxis();\r\n            this.drawPoint();\r\n            this.drawTitle();\r\n            this.drawBarChart();\r\n        },\r\n        /**\r\n         * 绘制完整的饼状图或环形图\r\n         */\r\n        drawPieUpdate: function () {\r\n            this.ctx.fillStyle = this.bgColor;\r\n            this.ctx.fillRect(0, 0, this.width, this.height);\r\n            this.drawLegend();\r\n            this.drawTitle();\r\n            this.drawPieChart();\r\n        },\r\n        /**\r\n         * 把数据绘制出柱状或折线\r\n         */\r\n        drawBarChart: function () {\r\n            this.ctx.fillStyle = this.fillColor;\r\n            this.ctx.strokeStyle = this.fillColor;\r\n            for (var i = 0; i < this.dataLength; i++) {\r\n                this.data[i].left = this.leftPadding + this.xLength * (i + 0.25);\r\n                this.data[i].top = this.height - this.bottomPadding - this.data[i].value * this.yRatio;\r\n                this.data[i].right = this.leftPadding + this.xLength * (i + 0.75);\r\n                this.data[i].bottom = this.height - this.bottomPadding;\r\n\r\n                // 绘制折线\r\n                if (this.type === 'line') {\r\n                    this.ctx.beginPath();\r\n                    this.ctx.arc(this.data[i].left + this.xLength / 4, this.data[i].top, 2, 0, 2 * Math.PI, true);\r\n                    this.ctx.fill();\r\n                    if (i !== 0) {\r\n                        this.ctx.moveTo(this.data[i].left + this.xLength / 4, this.data[i].top);\r\n                        this.ctx.lineTo(this.data[i - 1].left + this.xLength / 4, this.data[i - 1].top);\r\n                    }\r\n                    this.ctx.stroke();\r\n                } else if (this.type === 'bar') {\r\n                    // 绘制柱状\r\n                    this.ctx.fillRect(\r\n                        this.data[i].left,\r\n                        this.data[i].top,\r\n                        this.data[i].right - this.data[i].left,\r\n                        this.data[i].bottom - this.data[i].top\r\n                    );\r\n                }\r\n                if (this.showValue) {\r\n                    this.ctx.font = 12 * this.dpi + 'px Arial'\r\n                    this.ctx.fillText(\r\n                        this.data[i].value,\r\n                        this.data[i].left + this.xLength / 4,\r\n                        this.data[i].top - 5\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 把数据绘制出饼状或环形\r\n         */\r\n        drawPieChart: function () {\r\n            var x = this.width / 2,\r\n                y = this.height / 2,\r\n                x1 = 0,\r\n                y1 = 0;\r\n            for (var i = 0; i < this.dataLength; i++) {\r\n                this.ctx.beginPath();\r\n                this.ctx.fillStyle = this.colorList[i];\r\n                this.ctx.moveTo(x, y);\r\n                this.data[i].start = i === 0 ? -Math.PI / 2 : this.data[i - 1].end;\r\n                this.data[i].end = this.data[i].start + this.data[i].value / this.totalValue * 2 * Math.PI;\r\n                // 绘制扇形\r\n                this.ctx.arc(x, y, this.radius, this.data[i].start, this.data[i].end);\r\n                this.ctx.closePath();\r\n                this.ctx.fill();\r\n\r\n                this.data[i].middle = (this.data[i].start + this.data[i].end) / 2;\r\n                x1 = Math.ceil(Math.abs(this.radius * Math.cos(this.data[i].middle)));\r\n                y1 = Math.floor(Math.abs(this.radius * Math.sin(this.data[i].middle)));\r\n\r\n                this.ctx.strokeStyle = this.colorList[i];\r\n                // 绘制各个扇形边上的数据\r\n                if(this.showValue){\r\n                    if (this.data[i].middle <= 0) {\r\n                        this.ctx.textAlign = 'left';\r\n                        this.ctx.moveTo(x + x1, y - y1);\r\n                        this.ctx.lineTo(x + x1 + 10, y - y1 - 10);\r\n                        this.ctx.moveTo(x + x1 + 10, y - y1 - 10);\r\n                        this.ctx.lineTo(x + x1 + this.radius / 2, y - y1 - 10);\r\n                        this.ctx.stroke();\r\n                        this.ctx.fillText(this.data[i].value, x + x1 + 5 + this.radius / 2, y - y1 - 5);\r\n                    } else if (this.data[i].middle > 0 && this.data[i].middle <= Math.PI / 2) {\r\n                        this.ctx.textAlign = 'left';\r\n                        this.ctx.moveTo(x + x1, y + y1);\r\n                        this.ctx.lineTo(x + x1 + 10, y + y1 + 10);\r\n                        this.ctx.moveTo(x + x1 + 10, y + y1 + 10);\r\n                        this.ctx.lineTo(x + x1 + this.radius / 2, y + y1 + 10);\r\n                        this.ctx.stroke();\r\n                        this.ctx.fillText(this.data[i].value, x + x1 + 5 + this.radius / 2, y + y1 + 15);\r\n                    } else if (this.data[i].middle > Math.PI / 2 && this.data[i].middle < Math.PI) {\r\n                        this.ctx.textAlign = 'right';\r\n                        this.ctx.moveTo(x - x1, y + y1);\r\n                        this.ctx.lineTo(x - x1 - 10, y + y1 + 10);\r\n                        this.ctx.moveTo(x - x1 - 10, y + y1 + 10);\r\n                        this.ctx.lineTo(x - x1 - this.radius / 2, y + y1 + 10);\r\n                        this.ctx.stroke();\r\n                        this.ctx.fillText(this.data[i].value, x - x1 - 5 - this.radius / 2, y + y1 + 15);\r\n                    } else {\r\n                        this.ctx.textAlign = 'right';\r\n                        this.ctx.moveTo(x - x1, y - y1);\r\n                        this.ctx.lineTo(x - x1 - 10, y - y1 - 10);\r\n                        this.ctx.moveTo(x - x1 - 10, y - y1 - 10);\r\n                        this.ctx.lineTo(x - x1 - this.radius / 2, y - y1 - 10);\r\n                        this.ctx.stroke();\r\n                        this.ctx.fillText(this.data[i].value, x - x1 - 5 - this.radius / 2, y - y1 - 5);\r\n                    }\r\n                }\r\n            }\r\n            // 如果类型是环形图，绘制一个内圆\r\n            if (this.type === 'ring') {\r\n                this.ctx.beginPath();\r\n                this.ctx.fillStyle = this.bgColor;\r\n                this.ctx.arc(x, y, this.innerRadius, 0, Math.PI * 2);\r\n                this.ctx.fill();\r\n            }\r\n        },\r\n        /**\r\n         * 绘制坐标轴\r\n         */\r\n        drawAxis: function () {\r\n            this.ctx.beginPath();\r\n            this.ctx.strokeStyle = this.axisColor;\r\n            // y轴线, +0.5是为了解决canvas画1像素会显示成2像素的问题\r\n            this.ctx.moveTo(this.leftPadding + 0.5, this.height - this.bottomPadding + 0.5);\r\n            this.ctx.lineTo(this.leftPadding + 0.5, this.topPadding + 0.5);\r\n            // x轴线\r\n            this.ctx.moveTo(this.leftPadding + 0.5, this.height - this.bottomPadding + 0.5);\r\n            this.ctx.lineTo(this.width - this.rightPadding - 0.5, this.height - this.bottomPadding + 0.5);\r\n            this.ctx.stroke();\r\n        },\r\n        /**\r\n         * 绘制坐标轴上的点和值\r\n         */\r\n        drawPoint: function () {\r\n            // x轴坐标点\r\n            this.ctx.beginPath();\r\n            this.ctx.font = 12 * this.dpi + 'px Microsoft YaHei';\r\n            this.ctx.textAlign = 'center';\r\n            this.ctx.fillStyle = this.axisColor;\r\n            for (var i = 0; i < this.dataLength; i++) {\r\n                var name = this.data[i].name;\r\n                var xlen = this.xLength * (i + 1);\r\n                this.ctx.moveTo(this.leftPadding + xlen + 0.5, this.height - this.bottomPadding + 0.5);\r\n                this.ctx.lineTo(this.leftPadding + xlen + 0.5, this.height - this.bottomPadding + 5.5);\r\n                this.ctx.fillText(name, this.leftPadding + xlen - this.xLength / 2, this.height - this.bottomPadding + 15 * this.dpi);\r\n            }\r\n            this.ctx.stroke();\r\n\r\n            // y轴坐标点\r\n            this.ctx.beginPath();\r\n            this.ctx.font = 12 * this.dpi + 'px Microsoft YaHei';\r\n            this.ctx.textAlign = 'right';\r\n            this.ctx.fillStyle = this.axisColor;\r\n            this.ctx.moveTo(this.leftPadding + 0.5, this.height - this.bottomPadding + 0.5);\r\n            this.ctx.lineTo(this.leftPadding - 4.5, this.height - this.bottomPadding + 0.5);\r\n            this.ctx.fillText(0, this.leftPadding - 10, this.height - this.bottomPadding + 5);\r\n            for (var i = 0; i < this.yEqual; i++) {\r\n                var y = this.yFictitious * (i + 1);\r\n                var ylen = this.yLength * (i + 1);\r\n                this.ctx.beginPath();\r\n                this.ctx.strokeStyle = this.axisColor;\r\n                this.ctx.moveTo(this.leftPadding + 0.5, this.height - this.bottomPadding - ylen + 0.5);\r\n                this.ctx.lineTo(this.leftPadding - 4.5, this.height - this.bottomPadding - ylen + 0.5);\r\n                this.ctx.stroke();\r\n                this.ctx.fillText(y, this.leftPadding - 10, this.height - this.bottomPadding - ylen + 5);\r\n                this.ctx.beginPath();\r\n                this.ctx.strokeStyle = this.contentColor;\r\n                this.ctx.moveTo(this.leftPadding + 0.5, this.height - this.bottomPadding - ylen + 0.5)\r\n                this.ctx.lineTo(this.width - this.rightPadding - 0.5, this.height - this.bottomPadding - ylen + 0.5);\r\n                this.ctx.stroke();\r\n            }\r\n        },\r\n        /**\r\n         * 绘制图表标题\r\n         */\r\n        drawTitle: function () {\r\n            if (this.title) {\r\n                this.ctx.beginPath();\r\n                this.ctx.textAlign = 'center';\r\n                this.ctx.fillStyle = this.titleColor;\r\n                this.ctx.font = 16 * this.dpi + 'px Microsoft YaHei';\r\n                if (this.titlePosition === 'bottom' && this.bottomPadding >= 40) {\r\n                    this.ctx.fillText(this.title, this.width / 2, this.height - 5)\r\n                } else {\r\n                    this.ctx.fillText(this.title, this.width / 2, this.topPadding / 2 + 5)\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 绘制饼状图或环形图的图例\r\n         */\r\n        drawLegend: function () {\r\n            for (var i = 0; i < this.dataLength; i++) {\r\n                this.ctx.fillStyle = this.colorList[i];\r\n                this.ctx.fillRect(10, this.legendTop + 15 * i * this.dpi, 20, 11);\r\n                this.ctx.fillStyle = this.legendColor;\r\n                this.ctx.font = 12 * this.dpi + 'px Microsoft YaHei';\r\n                this.ctx.textAlign = 'left';\r\n                this.ctx.fillText(this.data[i].name, 35, this.legendTop + 10 + 15 * i * this.dpi);\r\n            }\r\n        },\r\n        /**\r\n         * y轴坐标点之间显示的间距\r\n         * @param data 生成图表的数据\r\n         * @return y轴坐标间距\r\n         */\r\n        getYFictitious: function (data) {\r\n            var arr = data.slice(0);\r\n            arr.sort(function (a, b) {\r\n                return -(a.value - b.value);\r\n            });\r\n            var len = Math.ceil(arr[0].value / this.yEqual);\r\n            var pow = len.toString().length - 1;\r\n            pow = pow > 2 ? 2 : pow;\r\n            return Math.ceil(len / Math.pow(10, pow)) * Math.pow(10, pow);\r\n        },\r\n        /**\r\n         * 获取饼状或环形图的数据总和\r\n         * @return {Number} total\r\n         */\r\n        getTotalValue: function () {\r\n            var total = 0;\r\n            for (var i = 0; i < this.dataLength; i++) {\r\n                total += this.data[i].value;\r\n            }\r\n            return total;\r\n        }\r\n    }\r\n    return sChart;\r\n});","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-card',{staticClass:\"mgb20\",staticStyle:{\"height\":\"100%\"},attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"user-info\"},[_c('img',{staticClass:\"user-avator\",attrs:{\"src\":require(\"../../assets/img/img.jpg\"),\"alt\":\"\"}}),_c('div',{staticClass:\"user-info-cont\"},[_c('div',{staticClass:\"user-info-name\"},[_vm._v(_vm._s(_vm.userinfo.Username))])])]),_c('div',{staticClass:\"user-info-list\"},[_vm._v(\"上次登录时间：\"),_c('span',[_vm._v(_vm._s(_vm.userinfo.UpdatedAt))])])])],1),_c('el-col',{attrs:{\"span\":16}},[_c('el-row',{attrs:{\"span\":16}},[_c('el-card',{attrs:{\"shadow\":\"hover\",\"body-style\":{padding: '0px'}}},[_c('div',{staticClass:\"grid-content grid-con-3\"},[_c('i',{staticClass:\"el-icon-lx-time grid-con-icon\"}),_c('div',{staticClass:\"grid-cont-right\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.orderCount))]),_c('div',[_vm._v(\"今日成交量\")])])])])],1),_c('el-row',{staticClass:\"mgb20\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{attrs:{\"shadow\":\"hover\",\"body-style\":{padding: '0px'}}},[_c('div',{staticClass:\"grid-content grid-con-1\"},[_c('i',{staticClass:\"el-icon-lx-people grid-con-icon\"}),_c('div',{staticClass:\"grid-cont-right\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.userCount))]),_c('div',[_vm._v(\"新增用户数\")])])])])],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{attrs:{\"shadow\":\"hover\",\"body-style\":{padding: '0px'}}},[_c('div',{staticClass:\"grid-content grid-con-2\"},[_c('i',{staticClass:\"el-icon-lx-goods grid-con-icon\"}),_c('div',{staticClass:\"grid-cont-right\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.amountFlow / 100))]),_c('div',[_vm._v(\"今日流水\")])])])])],1)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('schart',{ref:\"line\",staticClass:\"schart\",attrs:{\"canvasId\":\"line\",\"data\":_vm.data,\"type\":\"line\",\"options\":_vm.options2}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"id\":_vm.canvasId}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <canvas :id=\"canvasId\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import sChart from 'schart.js';\r\n    export default {\r\n        data() {\r\n            return {\r\n                schart: null,\r\n                opt: {}\r\n            }\r\n        },\r\n        props: {\r\n            canvasId: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'bar',\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: [],\r\n            },\r\n            options: {\r\n                type: Object,\r\n                required: false\r\n            }\r\n        },\r\n        mounted() {\r\n            this.renderChart();\r\n        },\r\n        methods: {\r\n            renderChart(){\r\n                this.schart = null;\r\n                this.opt = this.options;\r\n                if(!this.width || !this.height){\r\n                    if(!this.opt){\r\n                        this.opt = {autoWidth: true};\r\n                    }else{\r\n                        this.opt['autoWidth'] = true;\r\n                    }\r\n                }\r\n                this.schart = new sChart(this.canvasId, this.type, this.data, this.opt);\r\n            }\r\n        },\r\n        watch: {\r\n            data(){\r\n                this.renderChart();\r\n            },\r\n            options(){\r\n                this.renderChart();\r\n            },\r\n            type(){\r\n                this.renderChart();\r\n            }\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./vue-schart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./vue-schart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./vue-schart.vue?vue&type=template&id=7ee3609f&\"\nimport script from \"./vue-schart.vue?vue&type=script&lang=js&\"\nexport * from \"./vue-schart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"vue-schart.vue\"\nexport default component.exports","<template>\r\n    <div>\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\">\r\n                <el-card shadow=\"hover\" class=\"mgb20\" style=\"height:100%;\">\r\n                    <div class=\"user-info\">\r\n                        <img src=\"../../assets/img/img.jpg\" class=\"user-avator\" alt=\"\">\r\n                        <div class=\"user-info-cont\">\r\n                            <div class=\"user-info-name\">{{userinfo.Username}}</div>\r\n                            <!--<div>{{role}}</div>-->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"user-info-list\">上次登录时间：<span>{{userinfo.UpdatedAt}}</span></div>\r\n                    <!--<div class=\"user-info-list\">上次登录地点：<span>东莞</span></div>-->\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"16\">\r\n                <el-row :span=\"16\">\r\n                    <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\">\r\n                        <div class=\"grid-content grid-con-3\">\r\n                            <i class=\"el-icon-lx-time grid-con-icon\"></i>\r\n                            <div class=\"grid-cont-right\">\r\n                                <div class=\"grid-num\">{{orderCount}}</div>\r\n                                <div>今日成交量</div>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </el-row>\r\n                <el-row :gutter=\"20\" class=\"mgb20\">\r\n                    <el-col :span=\"12\">\r\n                        <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\">\r\n                            <div class=\"grid-content grid-con-1\">\r\n                                <i class=\"el-icon-lx-people grid-con-icon\"></i>\r\n                                <div class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{userCount}}</div>\r\n                                    <div>新增用户数</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\">\r\n                            <div class=\"grid-content grid-con-2\">\r\n                                <i class=\"el-icon-lx-goods grid-con-icon\"></i>\r\n                                <div class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{amountFlow / 100}}</div>\r\n                                    <div>今日流水</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n\r\n            <el-col :span=\"12\">\r\n                <el-card shadow=\"hover\">\r\n                    <schart ref=\"line\" class=\"schart\" canvasId=\"line\" :data=\"data\" type=\"line\"\r\n                            :options=\"options2\"></schart>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Schart from 'vue-schart';\r\n    import bus from '../common/bus';\r\n    import qs from '../../util/request'\r\n\r\n    export default {\r\n        name: 'dashboard',\r\n        data() {\r\n            return {\r\n                name: localStorage.getItem('ms_username'),\r\n                todoList: [{\r\n                    title: '今天要修复100个bug',\r\n                    status: false,\r\n                },\r\n                    {\r\n                        title: '今天要修复100个bug',\r\n                        status: false,\r\n                    },\r\n                    {\r\n                        title: '今天要写100行代码加几个bug吧',\r\n                        status: false,\r\n                    }, {\r\n                        title: '今天要修复100个bug',\r\n                        status: false,\r\n                    },\r\n                    {\r\n                        title: '今天要修复100个bug',\r\n                        status: true,\r\n                    },\r\n                    {\r\n                        title: '今天要写100行代码加几个bug吧',\r\n                        status: true,\r\n                    }\r\n                ],\r\n                data: [],\r\n\r\n                options2: {\r\n                    title: '最近七天订单成交量',\r\n                    fillColor: '#FC6FA1',\r\n                    axisColor: '#008ACD',\r\n                    contentColor: '#EEEEEE',\r\n                    bgColor: '#F5F8FD',\r\n                    bottomPadding: 30,\r\n                    topPadding: 30\r\n                },\r\n                orderCount: 0,\r\n                userCount: 0,\r\n                amountFlow: 0,\r\n                orderTrend: [],\r\n                userinfo: {}\r\n\r\n            }\r\n        },\r\n        components: {\r\n            Schart\r\n        },\r\n        computed: {\r\n            role() {\r\n                return this.name === 'admin' ? '超级管理员' : '普通用户';\r\n            }\r\n        },\r\n        created() {\r\n            let parseUserinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\r\n            parseUserinfo.UpdatedAt = this.formatCreatedAt('', '', parseUserinfo.UpdatedAt);\r\n            this.userinfo = parseUserinfo;\r\n\r\n            this.handleListener();\r\n            this.changeDate();\r\n            this.getUserCount();\r\n            this.getOrderCount();\r\n            this.getAmountFlow();\r\n            this.getOrderTrend();\r\n        },\r\n        activated() {\r\n            this.handleListener();\r\n        },\r\n        deactivated() {\r\n            window.removeEventListener('resize', this.renderChart);\r\n            bus.$off('collapse', this.handleBus);\r\n        },\r\n        methods: {\r\n            formatCreatedAt(row, column, cellValue) {\r\n                let date = new Date(Date.parse(cellValue));\r\n                let Y = date.getFullYear() + '-';\r\n                let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n                let D = date.getDate() + ' ';\r\n                let h = date.getHours() + ':';\r\n                let m = date.getMinutes() + ':';\r\n                let s = date.getSeconds();\r\n                return Y + M + D + h + m + s //\r\n            },\r\n            getUserCount() {\r\n                qs.post(\"/api/admin/dashBoard/user/count\").then(res => {\r\n                    if (res.code === 10000) {\r\n                        console.log(res.data);\r\n                        this.userCount = res.data;\r\n                    }\r\n                })\r\n            },\r\n\r\n            getOrderCount() {\r\n                qs.post(\"/api/admin/dashBoard/order/count\").then(res => {\r\n                    if (res.code === 10000) {\r\n                        console.log(res.data)\r\n                        this.orderCount = res.data;\r\n                    }\r\n                })\r\n            },\r\n\r\n            getAmountFlow() {\r\n                qs.post(\"/api/admin/dashBoard/amount/flow\").then(res => {\r\n                    if (res.code === 10000) {\r\n                        console.log(res.data)\r\n                        this.amountFlow = res.data;\r\n                    }\r\n                })\r\n            },\r\n            getOrderTrend() {\r\n                qs.post(\"/api/admin/dashBoard/order/trend\").then(res => {\r\n                    if (res.code === 10000) {\r\n                        console.log(res);\r\n                        this.orderTrend = res.data;\r\n                        for (let i = 0; i < this.orderTrend.length; i++) {\r\n                            let d = {\r\n                                name: this.orderTrend[i].Date,\r\n                                value: this.orderTrend[i].Volume\r\n                            }\r\n                            this.data = this.data.concat(d)\r\n                        }\r\n                        console.log(this.data)\r\n                    }\r\n                })\r\n            },\r\n\r\n\r\n            changeDate() {\r\n                const now = new Date().getTime();\r\n                this.data.forEach((item, index) => {\r\n                    const date = new Date(now - (6 - index) * 86400000);\r\n                    item.name = `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`\r\n                })\r\n            },\r\n            handleListener() {\r\n                bus.$on('collapse', this.handleBus);\r\n                // 调用renderChart方法对图表进行重新渲染\r\n                window.addEventListener('resize', this.renderChart)\r\n            },\r\n            handleBus(msg) {\r\n                setTimeout(() => {\r\n                    this.renderChart()\r\n                }, 300);\r\n            },\r\n            renderChart() {\r\n                this.$refs.line.renderChart();\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .el-row {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .grid-content {\r\n        display: flex;\r\n        align-items: center;\r\n        height: 100px;\r\n    }\r\n\r\n    .grid-cont-right {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        color: #999;\r\n    }\r\n\r\n    .grid-num {\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .grid-con-icon {\r\n        font-size: 50px;\r\n        width: 100px;\r\n        height: 100px;\r\n        text-align: center;\r\n        line-height: 100px;\r\n        color: #fff;\r\n    }\r\n\r\n    .grid-con-1 .grid-con-icon {\r\n        background: rgb(45, 140, 240);\r\n    }\r\n\r\n    .grid-con-1 .grid-num {\r\n        color: rgb(45, 140, 240);\r\n    }\r\n\r\n    .grid-con-2 .grid-con-icon {\r\n        background: rgb(100, 213, 114);\r\n    }\r\n\r\n    .grid-con-2 .grid-num {\r\n        color: rgb(45, 140, 240);\r\n    }\r\n\r\n    .grid-con-3 .grid-con-icon {\r\n        background: rgb(242, 94, 67);\r\n    }\r\n\r\n    .grid-con-3 .grid-num {\r\n        color: rgb(242, 94, 67);\r\n    }\r\n\r\n    .user-info {\r\n        display: flex;\r\n        align-items: center;\r\n        padding-bottom: 20px;\r\n        border-bottom: 2px solid #ccc;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .user-avator {\r\n        width: 120px;\r\n        height: 120px;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    .user-info-cont {\r\n        padding-left: 50px;\r\n        flex: 1;\r\n        font-size: 14px;\r\n        color: #999;\r\n    }\r\n\r\n    .user-info-cont div:first-child {\r\n        font-size: 30px;\r\n        color: #222;\r\n    }\r\n\r\n    .user-info-list {\r\n        font-size: 14px;\r\n        color: #999;\r\n        line-height: 25px;\r\n    }\r\n\r\n    .user-info-list span {\r\n        margin-left: 70px;\r\n    }\r\n\r\n    .mgb20 {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .todo-item {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .todo-item-del {\r\n        text-decoration: line-through;\r\n        color: #999;\r\n    }\r\n\r\n    .schart {\r\n        width: 100%;\r\n        height: 300px;\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=077bc82e&scoped=true&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dashboard.vue?vue&type=style&index=0&id=077bc82e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"077bc82e\",\n  null\n  \n)\n\ncomponent.options.__file = \"Dashboard.vue\"\nexport default component.exports"],"sourceRoot":""}